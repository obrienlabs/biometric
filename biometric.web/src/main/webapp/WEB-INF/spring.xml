<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
   xmlns:util="http://www.springframework.org/schema/util"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:tx="http://www.springframework.org/schema/tx" 
   xmlns:p="http://www.springframework.org/schema/p"
   xmlns:jpa="http://www.springframework.org/schema/data/jpa"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-4.1.xsd
     http://www.springframework.org/schema/context 
      http://www.springframework.org/schema/context/spring-context-4.1.xsd 
       http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd 
           http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
         http://www.springframework.org/schema/mvc 
         http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
         http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop-4.1.xsd"
   default-lazy-init="true">
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="${os.environment.db.url}/${os.environment.db.biometric.schema}" />
        <property name="username" value="${os.environment.db.username}" />
        <property name="password" value="${os.environment.db.password}" />
    </bean>
    
    <!--  -context:property-placeholder 
        location="file:///${os.environment.configuration.dir}//${os.environment.ecosystem}/biometric.properties" 
        order="1" ignore-unresolvable="true" ignore-resource-not-found="true"/>
    <context:property-placeholder 
        location="file:///${os.environment.configuration.dir}//${os.environment.ecosystem}/${os.environment.discriminator:}/biometric.properties" 
        order="2" ignore-unresolvable="true" ignore-resource-not-found="true"/>
    <context:property-placeholder 
        location="file:///${os.environment.configuration.dir}//${os.environment.ecosystem}/${os.environment.developer.username:}/biometric.properties" 
        order="3" ignore-unresolvable="true" ignore-resource-not-found="true"/>
    <context:property-placeholder 
        location="file:///${os.environment.configuration.dir}//${os.environment.ecosystem}/${os.environment.discriminator:}/${os.environment.developer.username:}/biometric.properties" 
        order="4" ignore-unresolvable="true" ignore-resource-not-found="true"/-->
        
    <!-- context:property-placeholder location="WEB-INF/db.properties"/-->
    <!-- fixes Caused by: java.sql.SQLException: No suitable driver found for ${os.environment.db.url} -->
    <!-- spring 3.1 only --><!-- context:property-placeholder/--> <!-- location="classpath*:META-INF/spring/db.properties"/-->
    <!-- spring 3.2 environment must override db.properties-->
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <!-- property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" /-->
        <property name="ignoreResourceNotFound" value="true" />
        <property name="locations" ref="locationsList">
            <!-- list>
                <value>classpath:db.properties</value>
            </list-->
        </property>
    </bean>
    
    <bean id="locationsDefault" 
        class="org.obrienlabs.gps.util.FileSystemLocationsFactoryBean"
        p:settings-ref="locationsList" />

    <util:list id="locationsList">
        <value>file://${os.environment.configuration.dir}/${os.environment.ecosystem}</value>
        <value>file://${os.environment.configuration.dir}/${os.environment.ecosystem}/${os.environment.discriminator:}</value>
        <value>file://${os.environment.configuration.dir}/${os.environment.ecosystem}/${os.environment.developer.username:}</value>
        <value>file://${os.environment.configuration.dir}/${os.environment.ecosystem}/${os.environment.discriminator:}/${os.environment.developer.username:}</value>
    </util:list>
        
    <bean id="properties" 
        class="org.obrienlabs.gps.util.FileSystemSourcePropertyPlaceholderConfigurer">
        <!-- property name="s3" ref="awsS3Client" /-->
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <!-- property name="inWarLocations" ref="propertyLocations" /-->
        <property name="fileSystemLocations" ref="locationsDefault"/>
        <property name="ignoreResourceNotFound" value="true" />
        <property name="propertiesName" value="biometric.properties" />        
    </bean> 
    
    <util:list id="propertyLocations">
        <!-- System Defaults -->
        <value>classpath*:/META-INF/settings.properties</value>
    </util:list>
    
    
    <!-- look for persistence.xml in the usual META-INF place -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
         primary="true"
         p:persistenceUnitName="from">
        <property name="dataSource" ref="dataSource" />
        
        <!-- property name="persistenceXmlLocation" value="META-INF/persistence.xml" /-->
        <!-- The workaround for https://hibernate.onjira.com/browse/HHH-6181 requires a dummy mapping file -->
        <property name="mappingResources">
            <list><value>META-INF/orm.xml</value></list>
        </property>
        <!-- requires an anonymous @PersistenceContext and precludes need for a persistence.xml in Spring 3.1-->
        <property name="packagesToScan" value="com.obrienlabs.gps.business.entity"/>
        <property name="jpaVendorAdapter">
            <bean name="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false" />
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
                <property name="generateDdl" value="false" />
            </bean>
        </property>
        <!-- http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/orm/hibernate4/LocalSessionFactoryBuilder.html -->
        <!-- property name="hibernate.transaction.jta.platform" value="org.hibernate.service.jta.platform.internal.SunOneJtaPlatform" /-->
        <!-- however we must not have an overriding property in hibernate.properties in the classpath -->
        <property name="jpaProperties">
            <props>
                <!-- prop key="hibernate.transaction.factory_class">org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory</prop-->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>               
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">true</prop>
                <prop key="javax.persistence.validation.mode">NONE</prop>
                <!-- prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop-->
                <prop key="hibernate.hbm2ddl.auto">none</prop>
                <prop key="hibernate.connection.pool_size">50</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.max_fetch_size">50</prop>
                <prop key="hibernate.max_batch_size">10</prop>                
                <prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>
                <!-- prop key="hibernate.jdbc.batch_size">5</prop>
                <prop key="hibernate.jdbc.batch_versioned_data">true</prop-->
                <prop key="hibernate.jdbc.use_streams_for_binary">true</prop> 
                <!-- prop key="hibernate.hbm2ddl.auto">drop-create</prop-->              
            </props>
        </property>
    </bean>   

    <!-- bean id="entityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean-->    
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
    <context:annotation-config />
    <context:spring-configured />
    <!-- rest annotations -->
    <mvc:annotation-driven />
    
    <!--jpa:repositories base-package="com.obrienslabs.gps.business"
                      entity-manager-factory-ref="entityManagerFactory"
                      transaction-manager-ref="transactionManager"/--> 
    <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
        primary="true"
        p:dataSource-ref="dataSource"
        p:entityManagerFactory-ref="entityManagerFactory" />
       
    <!-- tx:annotation-driven /-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--  read in DAO's via Repository annotation -->
    <context:component-scan base-package="com.obrienslabs.gps.business.*" use-default-filters="false" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
    </context:component-scan>
    <!--  Rest controllers -->
    <context:component-scan base-package="com.obrienslabs.gps.business" />
    <!-- in cases where the DAO's are in a separate jar - list them -->
    <bean id="daoFacade" class="org.obrienlabs.gps.business.ApplicationService"/>
    
    
    <!-- tiles http://www.codingpedia.org/ama/spring-mvc-and-apache-tiles-integration-example/ -->
        <!-- Views mapped in views.properties (PDF, XLS classes, and others) -->
        
    <!-- bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <bean id="contentNegotiatingResolver"
              class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order"
                  value="#{T(org.springframework.core.Ordered).HIGHEST_PRECEDENCE}" />
         <property name="favorPathExtension" value="true"/>
        <property name="contentNegotiationManager">
            <bean class="org.springframework.web.accept.ContentNegotiationManager">
                <constructor-arg>
                    <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
                        <constructor-arg>
                            <map>
                              <entry key="html" value="text/html"/>
                              <entry key="pdf" value="application/pdf"/>
                              <entry key="xsl" value="application/vnd.ms-excel"/>
                              <entry key="xml" value="application/xml"/>
                              <entry key="json" value="application/json"/>
                              <entry key="atom" value="application/xml"/>
                            </map>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
     </bean>
    <bean id="tilesViewResolver"
     class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <property name="order" value="#{contentNegotiatingResolver.order+1}" />
    </bean>
 
    <bean id="viewResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
      <property name="basename" value="views"/>
      <property name="order" value="#{tilesViewResolver.order+1}" />
    </bean-->
 
    <!-- Helper class to configure Tiles 3.x for the Spring Framework -->
    <!-- See http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html -->
    <!-- The actual tiles templates are in the tiles-definitions.xml  -->
    <!-- bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/templates.xml</value>  
            </list>
        </property>
    </bean--> 
    
    
    
    <!-- rest template experiments p.523 ch 12 -->
    <!-- bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                    <property name="marshaller" ref="jaxbMarshaller"/>
                    <property name="unmarshaller" ref="jaxbMarshaller"/>
                    <property name="supportedMediaTypes">
                        <list>
                            <bean class="org.springframework.http.MediaType">
                                <constructor-arg index="0" value="application"/>
                                <constructor-arg index="1" value="xml"/>
                            </bean>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean-->
    <bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="com.obrienlabs.gps.business.entity"/>
        <!-- property name="mappingLocation" value="classpath:META-INF/oxm-mapping.xml"/-->
    </bean>
    
    <!-- bean class="com.obrienlabs.gps.integration.SwaggerConfig" /-->
    
    <!-- 20161109 Neo4j 3.1.0 -->
    <!-- util:map id="config">
        <entry key="org.neo4j.server.database.location" value="../work/graph.db"  />
    </util:map-->
    
    <!-- bean id="graphDbFactory" class="com.alu.sdn.neo4j.db.embedded.ARMHighlyAvailableGraphDatabaseFactory">
        <constructor-arg ref="haMonitor" />
    </bean-->

    <!-- bean id="graphDbBuilder" factory-bean="graphDbFactory" factory-method="newHighlyAvailableDatabaseBuilder">
        <constructor-arg value="../work/graph.db"/>
    </bean>

    <bean id="graphDbBuilderFinal" factory-bean="graphDbBuilder" factory-method="setConfig">
        <constructor-arg ref="WebService.ServerConfigurator"/>
    </bean>

    <bean id="graphDatabaseService" factory-bean="graphDbBuilderFinal" 
        factory-method="newGraphDatabase" destroy-method="shutdown" /-->

    <!--bean id="WebService.ServerConfigurator"
        class="com.alu.sdn.neo4j.db.embedded.ServerConfigurator"  init-method="init">
        <constructor-arg ref="config" />
    </bean-->
    
    <!--bean id="graphDatabaseService.wrapper"
        class="org.neo4j.server.WrappingNeoServerBootstrapper"
        init-method="start"
        destroy-method="stop">
        <constructor-arg ref="graphDatabaseService" index="0"/>
        <constructor-arg ref="WebService.ServerConfigurator" index="1"/>
    </bean-->
</beans>



